#version 300 es
//Stefan Cuturela

precision mediump float;

out vec4 _GLF_color;
uniform vec2 resolution;

float radius(vec2 center_circle) {
  return sqrt((center_circle.x - gl_FragCoord.x) * (center_circle.x - gl_FragCoord.x) + (center_circle.y - gl_FragCoord.y) * (center_circle.y - gl_FragCoord.y)) / 3.5903037395174637;
}

void main(void) {
  int circle_radius;
  int circle_index;
  vec2 imgCenter = vec2(resolution.x / 2.0, resolution.y / 2.0);

  vec2 points[44];
  points[0] = imgCenter + vec2(2.3527734832026637, -58.22926498801879);
  points[1] = imgCenter + vec2(-71.48328261060676, 99.42431578756256);
  points[2] = imgCenter + vec2(-8.673553108937892, -41.42743954954049);
  points[3] = imgCenter + vec2(-35.23240896987572, -69.93343070711066);
  points[4] = imgCenter + vec2(-74.77734237830202, -59.6541142441736);
  points[5] = imgCenter + vec2(-34.34553039306185, 98.81026087808765);
  points[6] = imgCenter + vec2(-8.767587403395517, -46.2477757594401);
  points[7] = imgCenter + vec2(70.16247252850425, -25.99596524222285);
  points[8] = imgCenter + vec2(-86.13840613876131, 6.619244463436891);
  points[9] = imgCenter + vec2(79.16071810719976, -79.55812158638516);
  points[10] = imgCenter + vec2(19.759895729577593, -7.5248723916175875);
  points[11] = imgCenter + vec2(87.90711671335336, 40.045425418821054);
  points[12] = imgCenter + vec2(-51.89033834685337, -34.52334630451788);
  points[13] = imgCenter + vec2(83.99171314467344, 65.38552646884553);
  points[14] = imgCenter + vec2(19.032477090879276, 79.43474325705712);
  points[15] = imgCenter + vec2(-78.52150164971133, 85.97246260150273);
  points[16] = imgCenter + vec2(-85.32372279175074, -79.53808320138296);
  points[17] = imgCenter + vec2(-43.1689693379995, 69.63916514919246);
  points[18] = imgCenter + vec2(54.739783176615965, 12.770679224439906);
  points[19] = imgCenter + vec2(52.052251161719184, 96.41300945712487);
  points[20] = imgCenter + vec2(54.52254844528008, -88.11201473763803);
  points[21] = imgCenter + vec2(96.44200435311596, -74.32275748099757);
  points[22] = imgCenter + vec2(-93.28501157847846, -86.00487278333821);
  points[23] = imgCenter + vec2(14.410660423786181, -81.24014689311556);
  points[24] = imgCenter + vec2(-9.250295663585838, -29.682654286585276);
  points[25] = imgCenter + vec2(-92.81095015081773, 31.775251877268396);
  points[26] = imgCenter + vec2(65.06761273770947, -34.15143911807339);
  points[27] = imgCenter + vec2(-78.23211786544621, 85.05205124019338);
  points[28] = imgCenter + vec2(91.27094012318268, 96.51213338063845);
  points[29] = imgCenter + vec2(85.2341741015823, 3.4182639060939435);
  points[30] = imgCenter + vec2(68.3226167674196, -25.56597921641639);
  points[31] = imgCenter + vec2(56.0076446030132, 50.66876995239462);
  points[32] = imgCenter + vec2(-22.162759811011277, 21.325059225062894);
  points[33] = imgCenter + vec2(-90.29246150290989, -22.657983603045494);
  points[34] = imgCenter + vec2(-86.87069841583562, 44.621677474337986);
  points[35] = imgCenter + vec2(-82.40867148313231, 25.717345808429325);
  points[36] = imgCenter + vec2(-31.127067842120447, 64.77223097627756);
  points[37] = imgCenter + vec2(51.83954969104161, -15.976438327552312);
  points[38] = imgCenter + vec2(63.2816421098356, 64.14138970909988);
  points[39] = imgCenter + vec2(64.8238059228555, -36.955909649470065);
  points[40] = imgCenter + vec2(-35.79646924845061, -90.26463231259238);
  points[41] = imgCenter + vec2(-63.42099946154451, 66.03240299385915);
  points[42] = imgCenter + vec2(-77.0061587557274, -0.19078390569111647);
  points[43] = imgCenter + vec2(38.47472427813348, 39.62532921082031);

  int sizes[44];
  sizes[0] = 0;
  sizes[1] = 0;
  sizes[2] = 0;
  sizes[3] = 1;
  sizes[4] = 1;
  sizes[5] = 3;
  sizes[6] = 5;
  sizes[7] = 5;
  sizes[8] = 6;
  sizes[9] = 7;
  sizes[10] = 7;
  sizes[11] = 8;
  sizes[12] = 9;
  sizes[13] = 10;
  sizes[14] = 10;
  sizes[15] = 13;
  sizes[16] = 13;
  sizes[17] = 13;
  sizes[18] = 14;
  sizes[19] = 15;
  sizes[20] = 16;
  sizes[21] = 17;
  sizes[22] = 18;
  sizes[23] = 18;
  sizes[24] = 18;
  sizes[25] = 20;
  sizes[26] = 20;
  sizes[27] = 21;
  sizes[28] = 21;
  sizes[29] = 22;
  sizes[30] = 22;
  sizes[31] = 22;
  sizes[32] = 24;
  sizes[33] = 24;
  sizes[34] = 25;
  sizes[35] = 25;
  sizes[36] = 25;
  sizes[37] = 26;
  sizes[38] = 28;
  sizes[39] = 28;
  sizes[40] = 28;
  sizes[41] = 28;
  sizes[42] = 29;
  sizes[43] = 29;

  vec3 color_modifiers[44];
  color_modifiers[0] = vec3(0.7121421015800455, -0.02029093330781745, 0.7601829291778273);
  color_modifiers[1] = vec3(0.440914043895929, 0.6793081554095493, 0.4665600022751887);
  color_modifiers[2] = vec3(0.3519621970250422, 0.4707905050517162, 0.37018088961098217);
  color_modifiers[3] = vec3(0.7334564061587936, 0.31148158341380877, 0.0921768771916317);
  color_modifiers[4] = vec3(0.7022092931378352, -0.11997810210708809, 0.5261895752303577);
  color_modifiers[5] = vec3(0.5575914097876835, 0.6661577548250999, 0.2254320275996573);
  color_modifiers[6] = vec3(0.3596611933104487, -0.2739642645881331, 0.04394449917611887);
  color_modifiers[7] = vec3(1.1001179123378777, -0.02607330446777284, 0.8275701773620631);
  color_modifiers[8] = vec3(0.9025366129339092, 0.1013220098107131, 0.10372578042872505);
  color_modifiers[9] = vec3(1.1459015998605377, 0.6188106929428825, 0.598260128143216);
  color_modifiers[10] = vec3(0.3679925280624648, 0.24052785397929582, 0.08671012225246133);
  color_modifiers[11] = vec3(0.8954996221915934, -0.23568499779669078, 0.5433458643312973);
  color_modifiers[12] = vec3(1.1367407823236397, 0.10546017087909182, 0.6297078040678296);
  color_modifiers[13] = vec3(0.7930567649083686, -0.04382718012801551, 0.659090312178985);
  color_modifiers[14] = vec3(0.35024279420059307, -0.16949358841001766, 0.6980977465491538);
  color_modifiers[15] = vec3(0.3312205313173588, 0.40869453947702056, 0.12023513597356994);
  color_modifiers[16] = vec3(0.8329810151884334, 0.04801597805944896, 0.6671022049094631);
  color_modifiers[17] = vec3(0.3516685231826942, 0.09801661986653104, 0.9269556205491473);
  color_modifiers[18] = vec3(0.5976408291886306, 0.673964452325678, 0.7967779273790422);
  color_modifiers[19] = vec3(0.8428008822650905, -0.17574094260976497, 0.9132167417438294);
  color_modifiers[20] = vec3(0.6500270880223527, 0.1594563337742057, 0.7869538470364192);
  color_modifiers[21] = vec3(0.2352120466069369, 0.4354140909060977, 0.6913492807346567);
  color_modifiers[22] = vec3(0.8888940106858929, 0.5501837796575746, 0.46156527299579453);
  color_modifiers[23] = vec3(0.9455058668597334, 0.5575478594795205, 0.13034560871188627);
  color_modifiers[24] = vec3(0.8725207936550428, 0.21027584789121628, 0.01770886387586945);
  color_modifiers[25] = vec3(1.0334104098052064, -0.1318984763259849, 0.8522259243134135);
  color_modifiers[26] = vec3(0.5772758491328296, 0.26465646343690047, 0.9154264568415561);
  color_modifiers[27] = vec3(1.0269954001826083, 0.6458067822548719, 0.4513750510724903);
  color_modifiers[28] = vec3(0.5396347188094095, 0.5574449664359167, 0.10193326120000978);
  color_modifiers[29] = vec3(0.6436146358975487, 0.07724437632903519, 0.84497398093022);
  color_modifiers[30] = vec3(1.140945525281011, -0.22860596444190512, 0.9802065895493265);
  color_modifiers[31] = vec3(0.4320397116510623, -0.20855054134948542, 0.8923982528683599);
  color_modifiers[32] = vec3(0.9138605268062179, -0.23701932696364653, 0.12915570858510184);
  color_modifiers[33] = vec3(0.6884557282641313, 0.07974151574379479, 0.18901961182641547);
  color_modifiers[34] = vec3(0.3032207388442701, 0.2090142061549219, 0.23632373965849496);
  color_modifiers[35] = vec3(1.04178084501907, -0.263386234981217, 0.6978260753506279);
  color_modifiers[36] = vec3(0.8105057523838848, -0.11098239088652134, 0.5124921166004914);
  color_modifiers[37] = vec3(0.6554910754008971, 0.4221418549497716, 0.3701571882047333);
  color_modifiers[38] = vec3(0.8143286127559501, 0.07559029475822804, 0.5889113099657469);
  color_modifiers[39] = vec3(0.40508489327272396, 0.5455041352696237, 0.4583692254519727);
  color_modifiers[40] = vec3(0.5629999519107709, -0.23196815700870704, 0.02762841953901285);
  color_modifiers[41] = vec3(0.6527070587949042, 0.5710602535001301, 0.09462374569864285);
  color_modifiers[42] = vec3(0.735331051831206, -0.02837699254916698, 0.006926231446082953);
  color_modifiers[43] = vec3(0.846045916143574, -0.24193337796222475, 0.9275810785392559);

  for (int i = 0; i < 44; i++) {
    if (int(radius(points[i])) < sizes[i]) {
      circle_index = i;
      circle_radius = int(radius(points[i]));
      break;
    }
  }

  if (circle_radius != 0 && circle_radius < sizes[circle_index]) {
    float red = mod(float(circle_radius), color_modifiers[circle_index].x);
    float green = mod(float(circle_radius), color_modifiers[circle_index].y);
    float blue = mod(float(circle_radius), color_modifiers[circle_index].z);
    _GLF_color = vec4(red, green, blue, 1.0);
  } else {
    _GLF_color = vec4(0.17667690661348256, 0.7136217865757446, 0.6916174858623679, 1.0);
  }
}