#version 300 es
//Stefan Cuturela

precision mediump float;

out vec4 _GLF_color;
uniform vec2 resolution;

float radius(vec2 center_circle) {
  return sqrt((center_circle.x - gl_FragCoord.x) * (center_circle.x - gl_FragCoord.x) + (center_circle.y - gl_FragCoord.y) * (center_circle.y - gl_FragCoord.y)) / 2.036814830254098;
}

void main(void) {
  int circle_radius;
  int circle_index;
  vec2 imgCenter = vec2(resolution.x / 2.0, resolution.y / 2.0);

  vec2 points[86];
  points[0] = imgCenter + vec2(-35.44644035135573, -97.66903234469044);
  points[1] = imgCenter + vec2(-99.50742820271603, -88.0753155060064);
  points[2] = imgCenter + vec2(-40.08911060287361, 18.590958433842797);
  points[3] = imgCenter + vec2(55.44574790772339, -78.75270193274079);
  points[4] = imgCenter + vec2(-13.007911449144771, 75.4529427994634);
  points[5] = imgCenter + vec2(0.7347070648072052, -80.3835835921595);
  points[6] = imgCenter + vec2(10.86039382939954, 37.65352975316063);
  points[7] = imgCenter + vec2(1.445895002859654, 9.256181731209413);
  points[8] = imgCenter + vec2(-40.486347017843705, -14.219104134052497);
  points[9] = imgCenter + vec2(48.083436033876545, 78.88704490126864);
  points[10] = imgCenter + vec2(-40.6467883421884, -40.93956847950055);
  points[11] = imgCenter + vec2(-67.65869499517885, -42.13967646667991);
  points[12] = imgCenter + vec2(-4.99476006082975, -20.15819075225982);
  points[13] = imgCenter + vec2(24.80246566792783, -2.9087083039603057);
  points[14] = imgCenter + vec2(-22.191363289274292, 82.29367236859714);
  points[15] = imgCenter + vec2(0.3669700411470078, 98.38859608204338);
  points[16] = imgCenter + vec2(-6.801243618990593, 0.24095126756551455);
  points[17] = imgCenter + vec2(-59.40224360189079, -96.46900184229415);
  points[18] = imgCenter + vec2(-39.4287498510012, -83.75443325684004);
  points[19] = imgCenter + vec2(-38.940012595346694, 30.52572694813751);
  points[20] = imgCenter + vec2(83.53660598549833, -91.97209208554715);
  points[21] = imgCenter + vec2(56.82107400139209, -45.47181226191221);
  points[22] = imgCenter + vec2(-48.894937820711306, -38.16836255036247);
  points[23] = imgCenter + vec2(94.6215302349919, 22.72752050545175);
  points[24] = imgCenter + vec2(-95.3523755032221, 9.347951439693114);
  points[25] = imgCenter + vec2(89.4559046554144, -94.66435705154817);
  points[26] = imgCenter + vec2(42.08355032908526, -38.463657389378334);
  points[27] = imgCenter + vec2(-30.31595404166709, -32.24606929284928);
  points[28] = imgCenter + vec2(-0.6392472754687795, 1.340319190570538);
  points[29] = imgCenter + vec2(68.27419507223888, -89.31841776311916);
  points[30] = imgCenter + vec2(-17.83305197012406, -28.703611180635868);
  points[31] = imgCenter + vec2(67.77807000940366, 5.339886920973225);
  points[32] = imgCenter + vec2(-64.20240309423654, -56.4859175580628);
  points[33] = imgCenter + vec2(42.53748562913786, -57.75292501402076);
  points[34] = imgCenter + vec2(-90.40330484045145, -14.538225202887233);
  points[35] = imgCenter + vec2(96.02018191789531, -20.718542753608183);
  points[36] = imgCenter + vec2(-87.67026522105374, -96.2976111064032);
  points[37] = imgCenter + vec2(70.75815506161456, 57.20849016291052);
  points[38] = imgCenter + vec2(-59.22101111153333, -86.86579898994273);
  points[39] = imgCenter + vec2(71.60836019510282, 83.50611506781576);
  points[40] = imgCenter + vec2(-60.07434865918473, 29.80382642267991);
  points[41] = imgCenter + vec2(44.859006715773766, 35.47083224997489);
  points[42] = imgCenter + vec2(0.35405412006506154, -5.764250170432184);
  points[43] = imgCenter + vec2(8.514845840881025, -69.53749181970935);
  points[44] = imgCenter + vec2(-51.79920072235164, 15.127991617068215);
  points[45] = imgCenter + vec2(80.9805456498795, 15.608305120736743);
  points[46] = imgCenter + vec2(-25.076743142793024, 9.352059705009053);
  points[47] = imgCenter + vec2(-50.00504425480003, 68.67106709390242);
  points[48] = imgCenter + vec2(14.067539449967036, 18.742575352912148);
  points[49] = imgCenter + vec2(39.437855873107864, -79.53998832232811);
  points[50] = imgCenter + vec2(53.869017369174664, -96.38213404598315);
  points[51] = imgCenter + vec2(-82.6524289668545, 70.06230305286114);
  points[52] = imgCenter + vec2(-92.43941855722792, 95.10200914361423);
  points[53] = imgCenter + vec2(77.15705054668427, -89.60755938714766);
  points[54] = imgCenter + vec2(-88.0787256805353, -75.54998852058388);
  points[55] = imgCenter + vec2(-28.542953981867992, -63.31305126372666);
  points[56] = imgCenter + vec2(30.220421977928602, 40.32074414332341);
  points[57] = imgCenter + vec2(-75.27665378909995, 22.38779607719612);
  points[58] = imgCenter + vec2(-61.910665546734236, -91.33074860225341);
  points[59] = imgCenter + vec2(-33.28932953665109, 44.31784267403265);
  points[60] = imgCenter + vec2(-99.03614759305827, 61.32355429400222);
  points[61] = imgCenter + vec2(-44.55799478625772, 74.85244205663888);
  points[62] = imgCenter + vec2(96.9683080399618, 75.83650357449602);
  points[63] = imgCenter + vec2(-87.06990612375019, 7.775302208033241);
  points[64] = imgCenter + vec2(83.14378278808896, 10.363111343503228);
  points[65] = imgCenter + vec2(-41.00014039015787, -50.99549680730053);
  points[66] = imgCenter + vec2(55.2624582549865, 98.1445571429566);
  points[67] = imgCenter + vec2(64.45054136249999, 91.34049630632192);
  points[68] = imgCenter + vec2(-27.05868201381363, -19.644307404287975);
  points[69] = imgCenter + vec2(70.25049566519766, -3.0669578541663745);
  points[70] = imgCenter + vec2(85.88067472196896, -77.9257862372104);
  points[71] = imgCenter + vec2(95.65520110428014, 85.25355736816056);
  points[72] = imgCenter + vec2(-86.5957572196209, 20.918863291607394);
  points[73] = imgCenter + vec2(-31.31339862885585, -27.694421336229013);
  points[74] = imgCenter + vec2(25.44432229493343, -38.38650176069558);
  points[75] = imgCenter + vec2(35.96385703382951, -86.16289136373732);
  points[76] = imgCenter + vec2(11.442828379084546, -86.45785931325062);
  points[77] = imgCenter + vec2(40.251076780731744, 44.13080652947894);
  points[78] = imgCenter + vec2(-51.89271686570282, 27.48348507002165);
  points[79] = imgCenter + vec2(44.47142383776974, 43.00620277009488);
  points[80] = imgCenter + vec2(-94.17849745567284, -3.26596197897997);
  points[81] = imgCenter + vec2(-35.075426295295856, -35.36464012728941);
  points[82] = imgCenter + vec2(15.329390569710188, -84.78382688170929);
  points[83] = imgCenter + vec2(88.30761893190552, 23.854279330403028);
  points[84] = imgCenter + vec2(75.37029424880582, -86.29012706287101);
  points[85] = imgCenter + vec2(-13.857808477570565, 8.216348126362117);

  int sizes[86];
  sizes[0] = 0;
  sizes[1] = 0;
  sizes[2] = 0;
  sizes[3] = 0;
  sizes[4] = 0;
  sizes[5] = 1;
  sizes[6] = 1;
  sizes[7] = 1;
  sizes[8] = 2;
  sizes[9] = 2;
  sizes[10] = 2;
  sizes[11] = 2;
  sizes[12] = 2;
  sizes[13] = 2;
  sizes[14] = 4;
  sizes[15] = 5;
  sizes[16] = 5;
  sizes[17] = 6;
  sizes[18] = 6;
  sizes[19] = 6;
  sizes[20] = 7;
  sizes[21] = 7;
  sizes[22] = 8;
  sizes[23] = 8;
  sizes[24] = 10;
  sizes[25] = 10;
  sizes[26] = 10;
  sizes[27] = 11;
  sizes[28] = 11;
  sizes[29] = 11;
  sizes[30] = 11;
  sizes[31] = 12;
  sizes[32] = 12;
  sizes[33] = 12;
  sizes[34] = 12;
  sizes[35] = 12;
  sizes[36] = 12;
  sizes[37] = 13;
  sizes[38] = 13;
  sizes[39] = 13;
  sizes[40] = 13;
  sizes[41] = 14;
  sizes[42] = 14;
  sizes[43] = 14;
  sizes[44] = 14;
  sizes[45] = 14;
  sizes[46] = 15;
  sizes[47] = 15;
  sizes[48] = 15;
  sizes[49] = 15;
  sizes[50] = 15;
  sizes[51] = 16;
  sizes[52] = 16;
  sizes[53] = 16;
  sizes[54] = 16;
  sizes[55] = 17;
  sizes[56] = 17;
  sizes[57] = 17;
  sizes[58] = 18;
  sizes[59] = 18;
  sizes[60] = 20;
  sizes[61] = 21;
  sizes[62] = 22;
  sizes[63] = 22;
  sizes[64] = 22;
  sizes[65] = 22;
  sizes[66] = 23;
  sizes[67] = 23;
  sizes[68] = 23;
  sizes[69] = 24;
  sizes[70] = 24;
  sizes[71] = 25;
  sizes[72] = 25;
  sizes[73] = 25;
  sizes[74] = 26;
  sizes[75] = 27;
  sizes[76] = 27;
  sizes[77] = 27;
  sizes[78] = 28;
  sizes[79] = 28;
  sizes[80] = 28;
  sizes[81] = 28;
  sizes[82] = 28;
  sizes[83] = 28;
  sizes[84] = 29;
  sizes[85] = 29;

  vec3 color_modifiers[86];
  color_modifiers[0] = vec3(0.6072882485626178, 0.7010389381824046, 0.7453528603915509);
  color_modifiers[1] = vec3(0.14385286352303428, 0.2855515094398361, 0.643698402957025);
  color_modifiers[2] = vec3(0.9835385732708171, 0.02695951664327534, 0.1319436831984283);
  color_modifiers[3] = vec3(0.09416221629535737, 0.015159298586110315, 0.6790032701815911);
  color_modifiers[4] = vec3(0.5201912360887865, 0.7792869980542771, 0.2562283333106855);
  color_modifiers[5] = vec3(0.6732159036645458, 0.6730872450727007, 0.7967250708751057);
  color_modifiers[6] = vec3(0.8710822971186655, 0.8708048799369039, 0.4964039815572757);
  color_modifiers[7] = vec3(0.2835494683966385, 0.6083590365139625, 0.9393437569043676);
  color_modifiers[8] = vec3(0.3530524994432197, 0.6875516381838638, 0.4084964347010259);
  color_modifiers[9] = vec3(0.3119697369337915, 0.5799577832686672, 0.5107554799482598);
  color_modifiers[10] = vec3(0.9913399994642694, 0.920948123894645, 0.7664128087845792);
  color_modifiers[11] = vec3(0.27536819086447384, 0.8784199447316655, 0.09733117590047857);
  color_modifiers[12] = vec3(0.46899927181875334, 0.945585501895496, 0.7215320858438827);
  color_modifiers[13] = vec3(0.6940615025886828, 0.03874178866954903, 0.6789049440895236);
  color_modifiers[14] = vec3(0.26489582745247164, 0.16738908858440693, 0.003913530617220884);
  color_modifiers[15] = vec3(0.047265869196129406, 0.9692699099404161, 0.35310607217911816);
  color_modifiers[16] = vec3(0.27743223512585213, 0.5946127073205324, 0.8542422856596459);
  color_modifiers[17] = vec3(0.8792207732796439, 0.9486803298427854, 0.5287273263140473);
  color_modifiers[18] = vec3(0.28065222887931385, 0.7500555787451979, 0.33840417912084797);
  color_modifiers[19] = vec3(0.19579634790609957, 0.2915047094604192, 0.520451427664254);
  color_modifiers[20] = vec3(0.9742506551562657, 0.42239324866058015, 0.2910947546659429);
  color_modifiers[21] = vec3(0.3735195523639415, 0.7386540990800019, 0.7335973794454532);
  color_modifiers[22] = vec3(0.010175454536229256, 0.8482805002723425, 0.052084538173983286);
  color_modifiers[23] = vec3(0.6302892759562045, 0.027169061868886568, 0.689017514541342);
  color_modifiers[24] = vec3(0.6251463634655593, 0.9644868606768501, 0.10449068625097169);
  color_modifiers[25] = vec3(0.0738424929090098, 0.40099715541111836, 0.7911875285793643);
  color_modifiers[26] = vec3(0.5309909827327032, 0.5843343701434974, 0.34909591050251043);
  color_modifiers[27] = vec3(0.8657458802140383, 0.859356551354648, 0.9715469888517128);
  color_modifiers[28] = vec3(0.47763691175692136, 0.5206888198929495, 0.36636074451399603);
  color_modifiers[29] = vec3(0.8412017726139116, 0.34091643664654603, 0.8892682172312495);
  color_modifiers[30] = vec3(0.7704065114617926, 0.09577869883161827, 0.41863150939735927);
  color_modifiers[31] = vec3(0.0830623982249149, 0.8993350116114935, 0.13393984058689223);
  color_modifiers[32] = vec3(0.6922930069529333, 0.8544871670422907, 0.009673497300974332);
  color_modifiers[33] = vec3(0.014236355103667941, 0.7830924897671794, 0.945333238959629);
  color_modifiers[34] = vec3(0.0258596571942612, 0.792868607249388, 0.7697020881458003);
  color_modifiers[35] = vec3(0.8799160672841779, 0.758938117237593, 0.22841209932528117);
  color_modifiers[36] = vec3(0.057132151844041634, 0.8731949146108693, 0.8332595248581482);
  color_modifiers[37] = vec3(0.17029153024770394, 0.993471955005814, 0.883104405981479);
  color_modifiers[38] = vec3(0.21390510571635124, 0.660354562958691, 0.9874167485923045);
  color_modifiers[39] = vec3(0.5715697542648902, 0.7367922379694921, 0.9050978676724987);
  color_modifiers[40] = vec3(0.5355701733544411, 0.4909234663760471, 0.35834279099092525);
  color_modifiers[41] = vec3(0.46208799028599445, 0.8043954172246357, 0.44142677367579175);
  color_modifiers[42] = vec3(0.9815334850145371, 0.5560090450470724, 0.9213622125688529);
  color_modifiers[43] = vec3(0.23415639896909235, 0.4759043250475079, 0.7171411638073707);
  color_modifiers[44] = vec3(0.26589932863876764, 0.06616365046104933, 0.903810885726889);
  color_modifiers[45] = vec3(0.9808839765094693, 0.4082061294974554, 0.6106849393627755);
  color_modifiers[46] = vec3(0.28639772512349393, 0.1407044874215827, 0.5410215671916386);
  color_modifiers[47] = vec3(0.8414624662421567, 0.08939622340760589, 0.8756504137096263);
  color_modifiers[48] = vec3(0.30947086223052667, 0.4499065140139703, 0.8192260298891024);
  color_modifiers[49] = vec3(0.18997120042324211, 0.22883534141154327, 0.48791387896282645);
  color_modifiers[50] = vec3(0.6011909582704268, 0.12632794762477606, 0.5559179830863238);
  color_modifiers[51] = vec3(0.5316085562487977, 0.0036769023557003955, 0.3078931676344727);
  color_modifiers[52] = vec3(0.3321667559612411, 0.3877712060551973, 0.399899966934005);
  color_modifiers[53] = vec3(0.46977513013853633, 0.08202801995241438, 0.9722345526562691);
  color_modifiers[54] = vec3(0.3252765805880966, 0.966076165651908, 0.6827186858119475);
  color_modifiers[55] = vec3(0.7068328875377697, 0.5054512247611701, 0.4300408922785728);
  color_modifiers[56] = vec3(0.4512838818829811, 0.40341044995318387, 0.8403764595111106);
  color_modifiers[57] = vec3(0.6722007896605082, 0.9821370047950824, 0.34125534995405415);
  color_modifiers[58] = vec3(0.31398665972244044, 0.7850228706235464, 0.8142647181475696);
  color_modifiers[59] = vec3(0.408981335665488, 0.42677603943561837, 0.23808847083944928);
  color_modifiers[60] = vec3(0.318779717484449, 0.888119440966196, 0.11325483916566792);
  color_modifiers[61] = vec3(0.04449062015679506, 0.6098815135127635, 0.9086392096967358);
  color_modifiers[62] = vec3(0.12889715087377673, 0.9412491794821144, 0.27495396603548483);
  color_modifiers[63] = vec3(0.13055469774325024, 0.08504538052675104, 0.5706060165342272);
  color_modifiers[64] = vec3(0.22757710249613905, 0.6545580637859589, 0.9581625535985107);
  color_modifiers[65] = vec3(0.4050403732853093, 0.8959684517920901, 0.9718596501556257);
  color_modifiers[66] = vec3(0.7331520701949938, 0.4872328470301428, 0.7462414053223305);
  color_modifiers[67] = vec3(0.7078062375887161, 0.1586542533814017, 0.4891391824087724);
  color_modifiers[68] = vec3(0.7507372335616295, 0.2289188498477207, 0.7383380828193397);
  color_modifiers[69] = vec3(0.8240761592382594, 0.9345001723463464, 0.7324356113869996);
  color_modifiers[70] = vec3(0.5929677349520647, 0.8517365284561185, 0.8423232388856448);
  color_modifiers[71] = vec3(0.2875651764691629, 0.2906747076470363, 0.05438238436523524);
  color_modifiers[72] = vec3(0.9389437253524724, 0.5805068297792202, 0.16297428325531604);
  color_modifiers[73] = vec3(0.6994132982468833, 0.9787908512747822, 0.024870070963175284);
  color_modifiers[74] = vec3(0.4520725628630633, 0.9755917493553922, 0.2936434033649392);
  color_modifiers[75] = vec3(0.018503276107806, 0.8825796855170805, 0.08319443573525631);
  color_modifiers[76] = vec3(0.294374988633181, 0.3996732028418509, 0.9615464944412202);
  color_modifiers[77] = vec3(0.4796439858625322, 0.3992138004503957, 0.28054625883481044);
  color_modifiers[78] = vec3(0.3332183994766498, 0.5504370051176339, 0.5975452777972018);
  color_modifiers[79] = vec3(0.004485602182885184, 0.14322038530059678, 0.4629578184224229);
  color_modifiers[80] = vec3(0.7674421030154899, 0.9719501209537452, 0.9891171507514055);
  color_modifiers[81] = vec3(0.977358914825326, 0.6507432620104548, 0.8098082496001263);
  color_modifiers[82] = vec3(0.15576756546080472, 0.532569977559392, 0.19945154606718096);
  color_modifiers[83] = vec3(0.6633246998114591, 0.9287998851525568, 0.06140595262012416);
  color_modifiers[84] = vec3(0.7740861378328716, 0.48136971198867395, 0.44290173088809504);
  color_modifiers[85] = vec3(0.723008362678154, 0.7178426283453203, 0.9476754949736037);

  for (int i = 0; i < 86; i++) {
    if (int(radius(points[i])) < sizes[i]) {
      circle_index = i;
      circle_radius = int(radius(points[i]));
      break;
    }
  }

  if (circle_radius != 0 && circle_radius < sizes[circle_index]) {
    float red = mod(float(circle_radius), color_modifiers[circle_index].x);
    float green = mod(float(circle_radius), color_modifiers[circle_index].y);
    float blue = mod(float(circle_radius), color_modifiers[circle_index].z);
    _GLF_color = vec4(red, green, blue, 1.0);
  } else {
    _GLF_color = vec4(0.7332337137257733, 0.7399768509380147, 0.530431143358283, 1.0);
  }
}