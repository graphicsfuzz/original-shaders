#version 300 es
//Stefan Cuturela

precision mediump float;

out vec4 _GLF_color;
uniform vec2 resolution;

float radius(vec2 center_circle) {
  return sqrt((center_circle.x - gl_FragCoord.x) * (center_circle.x - gl_FragCoord.x) + (center_circle.y - gl_FragCoord.y) * (center_circle.y - gl_FragCoord.y)) / 2.1415857710704236;
}

void main(void) {
  int circle_radius;
  int circle_index;
  vec2 imgCenter = vec2(resolution.x / 2.0, resolution.y / 2.0);

  vec2 points[68];
  points[0] = imgCenter + vec2(-87.49689830230389, -77.43450477565692);
  points[1] = imgCenter + vec2(-65.61606748781696, 97.7821943277574);
  points[2] = imgCenter + vec2(-38.12988949457385, -47.38133343990012);
  points[3] = imgCenter + vec2(-72.61499022179375, 45.03224532198826);
  points[4] = imgCenter + vec2(63.09214151831111, 38.37769721084165);
  points[5] = imgCenter + vec2(16.92382533936496, -19.137800338097488);
  points[6] = imgCenter + vec2(64.31322623721758, -18.765240243797287);
  points[7] = imgCenter + vec2(41.58911454340175, -1.0787297099957849);
  points[8] = imgCenter + vec2(85.66043042506497, -88.4570071818743);
  points[9] = imgCenter + vec2(53.38440802488713, 57.87874544462812);
  points[10] = imgCenter + vec2(-79.02191532230634, -32.6356287330682);
  points[11] = imgCenter + vec2(48.22332209814222, -17.403388471871793);
  points[12] = imgCenter + vec2(20.725386387289536, 42.73136754695219);
  points[13] = imgCenter + vec2(34.397980276403594, 30.954743035778897);
  points[14] = imgCenter + vec2(68.63095326401488, 85.69665350171547);
  points[15] = imgCenter + vec2(11.938256496456813, 90.42474799777168);
  points[16] = imgCenter + vec2(-33.31926074349943, 68.8219809166377);
  points[17] = imgCenter + vec2(-32.873157234783925, 19.757188752304344);
  points[18] = imgCenter + vec2(44.35235437336227, 29.47468606033381);
  points[19] = imgCenter + vec2(-26.18037533757962, 12.947206486460704);
  points[20] = imgCenter + vec2(5.7260135967202475, -79.58241127331331);
  points[21] = imgCenter + vec2(-13.031761896153427, 17.545973743089725);
  points[22] = imgCenter + vec2(-16.191976442442012, -13.807598400131704);
  points[23] = imgCenter + vec2(44.427201981912475, -97.71749125463664);
  points[24] = imgCenter + vec2(60.48302703057185, -41.074665698672376);
  points[25] = imgCenter + vec2(-94.12875697620831, 8.05686559808596);
  points[26] = imgCenter + vec2(-75.70022750385318, 55.42863483201703);
  points[27] = imgCenter + vec2(6.251808167381623, -68.06250692399414);
  points[28] = imgCenter + vec2(51.9029897007234, -11.752795503355085);
  points[29] = imgCenter + vec2(65.7082546640103, 44.22302498661092);
  points[30] = imgCenter + vec2(67.26984403155973, 16.08525938915055);
  points[31] = imgCenter + vec2(-19.42333645147205, -8.934786665582827);
  points[32] = imgCenter + vec2(24.698640603998314, 10.917864878632733);
  points[33] = imgCenter + vec2(4.1251700275283465, 89.83102767514421);
  points[34] = imgCenter + vec2(86.55375138325977, -25.747483609175713);
  points[35] = imgCenter + vec2(-74.66933515821295, 94.31852957139337);
  points[36] = imgCenter + vec2(-28.710871592011312, 88.19605254629006);
  points[37] = imgCenter + vec2(30.15698610256734, 69.57751969435972);
  points[38] = imgCenter + vec2(-97.99807676815648, 56.86955885859631);
  points[39] = imgCenter + vec2(-17.45911582745816, 36.65834550627427);
  points[40] = imgCenter + vec2(32.65158730532265, 6.50234085164505);
  points[41] = imgCenter + vec2(87.80210667955221, 19.123756387797464);
  points[42] = imgCenter + vec2(-13.571929247477431, -66.06742920504405);
  points[43] = imgCenter + vec2(28.689359086586364, 4.954020937462911);
  points[44] = imgCenter + vec2(-96.05822530138303, -55.79947026508225);
  points[45] = imgCenter + vec2(55.65637723551333, 25.882140866641556);
  points[46] = imgCenter + vec2(-60.89578144914876, -41.89581928104587);
  points[47] = imgCenter + vec2(-21.088149986498106, -21.339994517283145);
  points[48] = imgCenter + vec2(-17.95353597631808, -40.5708867583654);
  points[49] = imgCenter + vec2(-25.767529816865895, 26.573749220177657);
  points[50] = imgCenter + vec2(-49.10798784736168, -7.561589805409952);
  points[51] = imgCenter + vec2(-98.46576538748806, -97.39454159142691);
  points[52] = imgCenter + vec2(-26.278314186658, 41.023597180474106);
  points[53] = imgCenter + vec2(85.00134737327183, -32.93714646858721);
  points[54] = imgCenter + vec2(-47.0935192992122, 34.990795942314755);
  points[55] = imgCenter + vec2(93.99046250761762, -74.96695823722395);
  points[56] = imgCenter + vec2(-47.218743525459914, -41.756227188146426);
  points[57] = imgCenter + vec2(67.35850756194522, 50.09970452233781);
  points[58] = imgCenter + vec2(66.49838882534773, -15.679711661109419);
  points[59] = imgCenter + vec2(86.74025146971968, 97.90693952824803);
  points[60] = imgCenter + vec2(-46.094277469286936, 29.79923627793626);
  points[61] = imgCenter + vec2(5.033322334718537, 28.826460295407518);
  points[62] = imgCenter + vec2(-14.301092952480587, -24.236993847738898);
  points[63] = imgCenter + vec2(60.101626279560236, -78.62091961099686);
  points[64] = imgCenter + vec2(-75.17615809183538, 55.399815459233736);
  points[65] = imgCenter + vec2(-12.952669238613112, 47.504526539215284);
  points[66] = imgCenter + vec2(-68.39316218425095, -78.71392548840504);
  points[67] = imgCenter + vec2(-80.5524714463979, 57.77378277847163);

  int sizes[68];
  sizes[0] = 0;
  sizes[1] = 0;
  sizes[2] = 1;
  sizes[3] = 1;
  sizes[4] = 1;
  sizes[5] = 1;
  sizes[6] = 2;
  sizes[7] = 2;
  sizes[8] = 2;
  sizes[9] = 2;
  sizes[10] = 3;
  sizes[11] = 5;
  sizes[12] = 6;
  sizes[13] = 6;
  sizes[14] = 6;
  sizes[15] = 7;
  sizes[16] = 7;
  sizes[17] = 9;
  sizes[18] = 9;
  sizes[19] = 9;
  sizes[20] = 10;
  sizes[21] = 10;
  sizes[22] = 10;
  sizes[23] = 10;
  sizes[24] = 11;
  sizes[25] = 11;
  sizes[26] = 11;
  sizes[27] = 11;
  sizes[28] = 12;
  sizes[29] = 12;
  sizes[30] = 12;
  sizes[31] = 12;
  sizes[32] = 13;
  sizes[33] = 13;
  sizes[34] = 13;
  sizes[35] = 14;
  sizes[36] = 15;
  sizes[37] = 15;
  sizes[38] = 15;
  sizes[39] = 15;
  sizes[40] = 16;
  sizes[41] = 16;
  sizes[42] = 16;
  sizes[43] = 18;
  sizes[44] = 18;
  sizes[45] = 18;
  sizes[46] = 18;
  sizes[47] = 19;
  sizes[48] = 20;
  sizes[49] = 20;
  sizes[50] = 20;
  sizes[51] = 20;
  sizes[52] = 20;
  sizes[53] = 20;
  sizes[54] = 21;
  sizes[55] = 21;
  sizes[56] = 21;
  sizes[57] = 21;
  sizes[58] = 21;
  sizes[59] = 21;
  sizes[60] = 21;
  sizes[61] = 21;
  sizes[62] = 22;
  sizes[63] = 23;
  sizes[64] = 24;
  sizes[65] = 25;
  sizes[66] = 26;
  sizes[67] = 27;

  vec3 color_modifiers[68];
  color_modifiers[0] = vec3(0.36593957802431226, 0.4602374817268598, 0.24589959762940572);
  color_modifiers[1] = vec3(0.5789787609429051, 0.3270886829771306, 0.2830854443842725);
  color_modifiers[2] = vec3(1.0689799909252724, 0.15679101689911085, 0.30403478103876347);
  color_modifiers[3] = vec3(0.6914934559817598, -0.18631699746437552, 0.24465301237490467);
  color_modifiers[4] = vec3(0.2979276590808823, 0.37786371115618694, 0.4775561219761989);
  color_modifiers[5] = vec3(0.8014077811199669, 0.26278991501340915, 0.4687037348860963);
  color_modifiers[6] = vec3(0.2520137709013967, 0.1242173093095233, 0.23314996357172824);
  color_modifiers[7] = vec3(0.9553502241210168, 0.15615003086870044, 0.701433520282171);
  color_modifiers[8] = vec3(0.7206663266236981, 0.36083915641839664, 0.2561274329926355);
  color_modifiers[9] = vec3(0.4079534779252663, 0.6250465058558108, 0.4758056486528208);
  color_modifiers[10] = vec3(1.087427397296446, 0.058366624425074065, 0.15933825552687642);
  color_modifiers[11] = vec3(0.9173069339502866, 0.6366122805782961, 0.43090042363288017);
  color_modifiers[12] = vec3(0.5688673044882269, -0.009940469604989344, 0.15268463657801923);
  color_modifiers[13] = vec3(0.39004122232309274, 0.6189832835047777, 0.12889748919024047);
  color_modifiers[14] = vec3(0.6008596075956736, 0.3524489314608997, 0.8129804998007437);
  color_modifiers[15] = vec3(0.45875704826382596, -0.08434478795698724, 0.25857306560182214);
  color_modifiers[16] = vec3(0.20383705087211962, 0.2770146866168534, 0.14339213190504174);
  color_modifiers[17] = vec3(0.9661932721422195, 0.06449575902564303, 0.1118588666018332);
  color_modifiers[18] = vec3(1.0068540279794453, 0.4443547914601656, 0.4161276226194872);
  color_modifiers[19] = vec3(0.6856126571768828, 0.3891122950087104, 0.7043221879179097);
  color_modifiers[20] = vec3(0.20434896644734762, -0.027540807726848582, 0.9546960321756656);
  color_modifiers[21] = vec3(0.6973529366195965, 0.6799750777504634, 0.2436752594253424);
  color_modifiers[22] = vec3(0.5522158776102948, 0.5658738692230685, 0.09979699649792939);
  color_modifiers[23] = vec3(0.33928061990092556, 0.4472849328295561, 0.5487905582272479);
  color_modifiers[24] = vec3(0.9529455581525053, 0.04007177150778202, 0.8409529764856997);
  color_modifiers[25] = vec3(0.5398603741758088, 0.4891264857488305, 0.65508899389298);
  color_modifiers[26] = vec3(0.22991441514029648, 0.6322064027173624, 0.32862482701308315);
  color_modifiers[27] = vec3(0.2555960899069188, -0.008521095051525263, 0.573246285888606);
  color_modifiers[28] = vec3(0.2873838303030572, 0.10463108710943608, 0.5682201534090873);
  color_modifiers[29] = vec3(0.8440711321810512, 0.04366171238204536, 0.3046137222861228);
  color_modifiers[30] = vec3(0.6408089015246767, -0.06412116793830441, 0.8015512620871721);
  color_modifiers[31] = vec3(0.24847310559966335, 0.12188020111519376, 0.27612029330666643);
  color_modifiers[32] = vec3(0.8351462489492059, -0.12714451746100736, 0.051481522445022576);
  color_modifiers[33] = vec3(0.4050579894822656, 0.09422899890401065, 0.6118024675875963);
  color_modifiers[34] = vec3(0.6259304029344033, 0.626425669365763, 0.5668331773153821);
  color_modifiers[35] = vec3(0.4402507636291289, 0.5585691062502596, 0.47016254351357767);
  color_modifiers[36] = vec3(0.2662070013108318, 0.23651164880477776, 0.9028012437217351);
  color_modifiers[37] = vec3(0.2055465989975595, 0.00225465130145458, 0.7030036407810933);
  color_modifiers[38] = vec3(0.4383448683947481, 0.3379730016264783, 0.531539618045755);
  color_modifiers[39] = vec3(0.843909977619699, -0.13947174334168994, 0.03678062582570396);
  color_modifiers[40] = vec3(0.2804649647668252, 0.44890161463562733, 0.5441825838825497);
  color_modifiers[41] = vec3(0.285101093703303, 0.5039913201204238, 0.7825962605199238);
  color_modifiers[42] = vec3(0.2632850317749775, -0.08354844488278329, 0.18270683418554878);
  color_modifiers[43] = vec3(0.5057404816440236, -0.22656238932850853, 0.7962426098049795);
  color_modifiers[44] = vec3(0.7544593665964245, -0.07511746370790623, 0.755464809850999);
  color_modifiers[45] = vec3(0.6688420072447578, -0.022183215683103275, 0.2791850394750467);
  color_modifiers[46] = vec3(0.4458267965585883, 0.1337529789273338, 0.46948947415045805);
  color_modifiers[47] = vec3(1.0624988732785574, 0.43488712473477525, 0.4787435477389631);
  color_modifiers[48] = vec3(0.6051185983117564, 0.47325366048763556, 0.4856178806029894);
  color_modifiers[49] = vec3(0.20459395018504395, 0.18523043251403076, 0.05913999153868377);
  color_modifiers[50] = vec3(0.34010163261122023, 0.597560317491465, 0.6525665245439738);
  color_modifiers[51] = vec3(0.2314766920436599, 0.3722735249959033, 0.04937115206418674);
  color_modifiers[52] = vec3(0.9316693959426241, 0.18491110330152477, 0.9445659570240675);
  color_modifiers[53] = vec3(0.8034370479886987, -0.1985217296732265, 0.3594618285801727);
  color_modifiers[54] = vec3(0.6521185078637584, 0.6365378675056488, 0.801299219402705);
  color_modifiers[55] = vec3(0.9987452213433083, 0.146165596578048, 0.18346137991843925);
  color_modifiers[56] = vec3(0.7326676629722719, 0.4360254373168137, 0.4202735479246401);
  color_modifiers[57] = vec3(0.9120527135366123, -0.03751225321321677, 0.31130442071123177);
  color_modifiers[58] = vec3(0.6304362040716054, -0.0800698733225374, 0.28740295960562356);
  color_modifiers[59] = vec3(0.8110524985611023, -0.27239686677676406, 0.2665478923417165);
  color_modifiers[60] = vec3(0.5726910524829363, 0.34514437857188535, 0.7026180386452262);
  color_modifiers[61] = vec3(1.161321311411655, 0.1364391895549762, 0.8732404420954025);
  color_modifiers[62] = vec3(0.2808129381709719, -0.18527220590903143, 0.8116801539973462);
  color_modifiers[63] = vec3(0.3830727904086994, 0.10243049191208947, 0.12603335617987677);
  color_modifiers[64] = vec3(0.6221091927470048, 0.6408710210012483, 0.3790618111826064);
  color_modifiers[65] = vec3(0.4531835506865948, 0.29416999959107465, 0.6827777519799273);
  color_modifiers[66] = vec3(1.1218105006829155, -0.28225910539475746, 0.5809801504927384);
  color_modifiers[67] = vec3(0.9466149566652202, -0.26968047726197436, 0.4972874640359183);

  for (int i = 0; i < 68; i++) {
    if (int(radius(points[i])) < sizes[i]) {
      circle_index = i;
      circle_radius = int(radius(points[i]));
      break;
    }
  }

  if (circle_radius != 0 && circle_radius < sizes[circle_index]) {
    float red = mod(float(circle_radius), color_modifiers[circle_index].x);
    float green = mod(float(circle_radius), color_modifiers[circle_index].y);
    float blue = mod(float(circle_radius), color_modifiers[circle_index].z);
    _GLF_color = vec4(red, green, blue, 1.0);
  } else {
    _GLF_color = vec4(0.48787051445433693, 0.5035561779461959, 0.13723724594570186, 1.0);
  }
}